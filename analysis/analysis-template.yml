AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: "A template to create all the Analysis infrastructure."

Parameters:
  CodeSigningConfigArn:
    Type: String
    Default: "none"
    Description: >
      The ARN of the Code Signing Config to use, provided by the deployment pipeline
  PermissionsBoundary:
    Description: "The ARN of the permissions boundary to apply when creating IAM roles"
    Type: String
    Default: "none"
  Environment:
    Description: "The environment type"
    Type: "String"
    AllowedValues:
      - "dev"
      - "build"
      - "staging"
      - "integration"
      - "production"
    ConstraintDescription: must be dev, build, staging, integration or production
  TestRoleArn:
    Type: "String"
    Description: "The ARN of the role that will used for integration tests"
    Default: "none"
    AllowedPattern: "(none)|(arn:aws:iam::.*:role/.*)"

Conditions:
  UsePermissionsBoundary: !Not [ !Equals [ !Ref PermissionsBoundary, "none" ] ]
  UseCodeSigning: !Not [ !Equals [ !Ref CodeSigningConfigArn, "none" ] ]
  UseTestRole: !Not [ !Equals [ !Ref TestRoleArn, "none" ]]

Globals:
  Function:
    CodeSigningConfigArn: !If
      - UseCodeSigning
      - !Ref CodeSigningConfigArn
      - !Ref AWS::NoValue
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue
    Architectures:
      - x86_64

Resources:
  AuditEventDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Description: "TxMA - Event Message Database"
        Name: "txma-audit"

  AuditEventTable:
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref AuditEventDatabase
      TableInput:
        Description: "Table contain event message raw data"
        Name: !Sub "txma-audit-${Environment}-message-batch-test"
        Parameters:
          # has_encrypted_data: false
          projection.enabled: true
          projection.datetime.type: date
          projection.datetime.range: '2022/08/01/00,NOW'
          projection.datetime.format: 'yyyy/MM/dd/HH'
          projection.datetime.interval: 1
          projection.datetime.interval.unit: HOURS
          storage.location.template: 's3://audit-${Environment}-message-batch/firehose/${datetime}/'
        PartitionKeys:
          - {Name: "datetime", Type: string}
        StorageDescriptor:
          Columns:
            - {Name: "event_id", Type: string}
            - {Name: "client_id", Type: string}
            - {Name: "timestamp", Type: bigint}
            - {Name: "timestamp_formatted", Type: string}
            - {Name: "event_name", Type: string}
            - {Name: "component_id", Type: string}
            - {Name: "user", Type: string}
            - {Name: "platform", Type: string}
            - {Name: "restricted", Type: string}
            - {Name: "extensions", Type: string}
          Compressed: true
          InputFormat: "org.apache.hadoop.mapred.TextInputFormat"
          Location: "s3://audit-${Environment}-message-batch/firehose/"
          OutputFormat: "org.apache.hadoop.hive.ql.io.IgnoreKeyTextOutputFormat"
          SerdeInfo:
            Parameters: {"ignore.malformed.json": true,"serialization.format": 1,"field.delim":""}
            SerializationLibrary: "org.openx.data.jsonserde.JsonSerDe"
          StoredAsSubDirectories: false
        TableType: EXTERNAL_TABLE

  AthenaEventWorkgroup:
    Type: AWS::Athena::WorkGroup
    Properties:
      Description: The workgroup for TxMA queries
      Name: TxMAAuditQueries
      WorkGroupConfiguration:
        EnforceWorkGroupConfiguration: true
        PublishCloudWatchMetricsEnabled: false
        ResultConfiguration:
          # EncryptionConfiguration:
          #   EncryptionOption: "SSE_KMS"
          #   KmsKey: ?
          OutputLocation: "s3://athena-example-bucket-${Environment}/"
